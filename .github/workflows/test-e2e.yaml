name: Test E2E
description: |
  Run some of the actions in a PR to ensure they work as expected.

on:
  workflow_call:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  changed-files:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    outputs:
      changes: ${{ steps.changed-files.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - id: changed-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-release-list:
              - 'build-release-list/**'

  build-release-list:
    if: "${{ !contains(github.event.pull_request.title, 'chore(main): release') && contains(fromJson(needs.changed-files.outputs.changes), 'build-release-list') }}"
    needs:
      - changed-files
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: ./build-release-list
        id: build-release-list
        with:
          release-candidate-tag: 'release-pr-1959'
          platform: 'the-fancy-platform'
          services: '["migrations", "service"]'

      - name: Validate the output (should trigger a failure if the output is not as expected)
        env:
          OUTPUT: ${{ steps.build-release-list.outputs.services }}
        run: |
          echo "Services raw output: $OUTPUT"

          echo "Services parsed by jq:"
          echo "${OUTPUT}" | jq

          echo "Services parsed by fromJson:"
          echo "${{ fromJson(steps.build-release-list.outputs.services) }}"

      - uses: ./build-release-list
        id: build-release-list-empty
        with:
          release-candidate-tag: 'release-pr-stub'
          platform: 'the-fancy-platform'
          services: '["migrations", "service"]'

      - name: Validate the output when no services are found
        env:
          OUTPUT: ${{ steps.build-release-list-empty.outputs.services }}
        run: |
          if [ "${OUTPUT}" != "[]" ]; then
            echo "Expected empty array, got: ${OUTPUT}"
            exit 1
          fi
